# Buildroot release version
ARG BUILDROOT_RELEASE=2023.02
ARG BUILDROOT_BASE=/root
ARG BR2_CONFIGFILE=licheepi_nano_spiflash_defconfig

FROM ubuntu:22.04 AS base
ARG BUILDROOT_BASE
ARG BUILDROOT_RELEASE
ENV DEBIAN_FRONTEND=noninteractive

# cache apt update results
RUN apt update

# install build prerequisites
# @todo remove python3-distutils after upgrading U-Boot
RUN apt install -qy \
    bc \
    bison \
    build-essential \
    bzr \
    chrpath \
    cpio \
    cvs \
    devscripts \
    diffstat \
    dosfstools \
    fakeroot \
    flex \
    gawk \
    git \
    libncurses5-dev \
    libssl-dev \
    locales \
    python3-dev \
    python3-distutils \
    python3-setuptools \
    rsync \
    subversion \
    swig \
    texinfo \
    unzip \
    wget \
    whiptail

# external toolchain needs this
RUN update-locale LC_ALL=C

# get Buildroot image
WORKDIR $BUILDROOT_BASE/buildroot
RUN wget -qO- http://buildroot.org/downloads/buildroot-${BUILDROOT_RELEASE}.tar.gz | tar --strip-components=1 -xz

# build the cross-compilation toolchain as a separate cacheable image
FROM base AS sdk
ARG BUILDROOT_BASE

# configure a skeleton setup for `make sdk` only at first
# (we take special care to not include other unrelated config files)
WORKDIR $BUILDROOT_BASE/licheepi-nano-sdk
RUN echo 'name: LICHEEPI_NANO_SDK' >> external.desc
RUN echo 'desc: LicheePi Nano SDK only' >> external.desc
RUN touch external.mk Config.in
COPY configs/licheepi_nano_sdk_defconfig configs/

# compile the SDK (this takes a while!)
WORKDIR $BUILDROOT_BASE/buildroot
RUN BR2_EXTERNAL=$BUILDROOT_BASE/licheepi-nano-sdk make licheepi_nano_sdk_defconfig

RUN make sdk

# start main build using the generated toolchain bundle
FROM base AS main
ARG BR2_CONFIGFILE
ARG BUILDROOT_BASE

# copy over the SDK tarball (keeping the name)
COPY --from=sdk $BUILDROOT_BASE/buildroot/output/images/arm-buildroot-linux-gnueabi_sdk-buildroot.tar.gz $BUILDROOT_BASE/

# copy over the main config
WORKDIR $BUILDROOT_BASE/licheepi-nano
COPY board/ board/
COPY configs/ configs/
COPY package/ package/
COPY \
    Config.in \
    external.desc \
    external.mk \
    ./
RUN chmod +x board/licheepi_nano/post-image.sh
RUN ln -sf $BUILDROOT_BASE/buildroot/output/host/bin/genimage /usr/bin/genimage

# set up the defconfig
WORKDIR $BUILDROOT_BASE/buildroot
RUN BR2_EXTERNAL=$BUILDROOT_BASE/licheepi-nano make $BR2_CONFIGFILE

# prep the toolchain from the tarball
RUN make toolchain

# prepare for builds (broken out separately to cache more granularly, especially Linux source fetch)
RUN make linux-source
RUN make uboot-source

# run the main build command
RUN make

# expose built image files in standalone root folder
FROM scratch AS dist
ARG BUILDROOT_BASE

COPY --from=main $BUILDROOT_BASE/buildroot/output/images/ .
